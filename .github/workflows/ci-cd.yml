name: CI/CD â€” Build to ACR & Deploy to ACA

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  workflow_dispatch:

concurrency:
  group: ci-cd-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write

env:
  ACR_NAME: acralotaibi826
  ACR_LOGIN_SERVER: acralotaibi826.azurecr.io
  FE_IMAGE_NAME: frontend
  BE_IMAGE_NAME: backend

jobs:
  build_and_push:
    name: Build & Push images to ACR
    runs-on: ubuntu-latest
    outputs:
      TAG: ${{ steps.tag.outputs.TAG }}
    steps:
      - uses: actions/checkout@v4

      - name: Azure login (SPN JSON)
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: ACR login (az)
        run: az acr login --name $ACR_NAME

      - name: Set TAG (short SHA)
        id: tag
        run: echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Build & push FRONTEND
        run: |
          docker build -t $ACR_LOGIN_SERVER/${FE_IMAGE_NAME}:${{ steps.tag.outputs.TAG }} \
                       -t $ACR_LOGIN_SERVER/${FE_IMAGE_NAME}:latest ./frontend
          docker push $ACR_LOGIN_SERVER/${FE_IMAGE_NAME}:${{ steps.tag.outputs.TAG }}
          docker push $ACR_LOGIN_SERVER/${FE_IMAGE_NAME}:latest

      - name: Build & push BACKEND
        run: |
          docker build -t $ACR_LOGIN_SERVER/${BE_IMAGE_NAME}:${{ steps.tag.outputs.TAG }} \
                       -t $ACR_LOGIN_SERVER/${BE_IMAGE_NAME}:latest ./backend
          docker push $ACR_LOGIN_SERVER/${BE_IMAGE_NAME}:${{ steps.tag.outputs.TAG }}
          docker push $ACR_LOGIN_SERVER/${BE_IMAGE_NAME}:latest

  deploy:
    name: Deploy to Azure Container Apps
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Azure login (SPN JSON)
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy FRONTEND
        uses: azure/container-apps-deploy-action@v2
        with:
          resourceGroup:  ${{ secrets.AZ_RESOURCE_GROUP }}
          containerAppName: ${{ secrets.ACA_FE_APP }}
          imageToDeploy: ${{ env.ACR_LOGIN_SERVER }}/${{ env.FE_IMAGE_NAME }}:${{ needs.build_and_push.outputs.TAG }}

      - name: Deploy BACKEND
        uses: azure/container-apps-deploy-action@v2
        with:
          resourceGroup:  ${{ secrets.AZ_RESOURCE_GROUP }}
          containerAppName: ${{ secrets.ACA_BE_APP }}
          imageToDeploy: ${{ env.ACR_LOGIN_SERVER }}/${{ env.BE_IMAGE_NAME }}:${{ needs.build_and_push.outputs.TAG }}
