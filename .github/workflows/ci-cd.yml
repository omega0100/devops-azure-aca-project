name: üöÄ CI/CD ‚Äî Azure Container Apps + ACR üê≥

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ci-cd-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read
  packages: write

env:
  ACR_NAME: acralotaibi826
  ACR_LOGIN_SERVER: acralotaibi826.azurecr.io
  FE_IMAGE_NAME: frontend
  BE_IMAGE_NAME: backend
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build_and_push:
    name: üèóÔ∏è Build & Push images to ACR
    runs-on: ubuntu-latest

    steps:
      - name: üì¶ Checkout repository
        uses: actions/checkout@v4

      - name: üîê Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: üß± Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîë Login to ACR
        run: az acr login --name $ACR_NAME --only-show-errors

      - name: üåê Build & Push FRONTEND (React + Nginx)
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.FE_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.FE_IMAGE_NAME }}:v11
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: ‚öôÔ∏è Build & Push BACKEND (Spring Boot)
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.BE_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.BE_IMAGE_NAME }}:v8
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: üö¢ Deploy to Azure Container Apps
    needs: build_and_push
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'

    steps:
      - name: üîê Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: üåç Deploy FRONTEND container (ACA)
        uses: azure/container-apps-deploy-action@v2
        with:
          resourceGroup: ${{ secrets.AZ_RESOURCE_GROUP }}
          containerAppName: ${{ secrets.ACA_FE_APP }}
          imageToDeploy: ${{ env.ACR_LOGIN_SERVER }}/${{ env.FE_IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: üîß Deploy BACKEND container (ACA)
        uses: azure/container-apps-deploy-action@v2
        with:
          resourceGroup: ${{ secrets.AZ_RESOURCE_GROUP }}
          containerAppName: ${{ secrets.ACA_BE_APP }}
          imageToDeploy: ${{ env.ACR_LOGIN_SERVER }}/${{ env.BE_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
