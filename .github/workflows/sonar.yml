# .github/workflows/sonar.yml
name: SonarCloud Code Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: read

jobs:
  backend-analysis:
    name: "🔍 Backend Analysis"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      # ====== اختر (A) أو (B) حسب تقنية الـbackend ======
      # (A) إن كان الـbackend Java/Maven + JaCoCo
      - name: Setup Java
        if: ${{ !cancelled() }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: Tests + Coverage (Maven)
        if: ${{ !cancelled() }}
        run: mvn -B clean verify

      - name: SonarCloud Scan (Maven)
        if: ${{ !cancelled() }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN:  ${{ secrets.SONAR_TOKEN }}
        run: >
          mvn sonar:sonar
          -Dsonar.organization=${{ secrets.SONAR_ORG }}
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY_BE }}
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.sources=src/main
          -Dsonar.tests=src/test
          -Dsonar.java.binaries=target/classes
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
          -Dsonar.newCode.referenceBranch=main

      # (B) إن كان الـbackend Node/TS Jest + lcov (احذف بلوكات Java فوق واستعمل هذا)
      # - name: Setup Node
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: 20
      #     cache: npm
      #
      # - name: Install deps
      #   run: npm ci
      #
      # - name: Tests + Coverage
      #   run: npm run test:coverage
      #
      # - name: SonarCloud Scan (Node)
      #   uses: SonarSource/sonarcloud-github-action@v2
      #   env:
      #     SONAR_TOKEN:   ${{ secrets.SONAR_TOKEN }}
      #     GITHUB_TOKEN:  ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     projectBaseDir: .
      #     args: >
      #       -Dsonar.organization=${{ secrets.SONAR_ORG }}
      #       -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY_BE }}
      #       -Dsonar.sources=src
      #       -Dsonar.tests=src
      #       -Dsonar.test.inclusions=**/*.test.ts,**/*.test.tsx,**/*.spec.ts
      #       -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/build/**
      #       -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
      #       -Dsonar.newCode.referenceBranch=main

      - name: Upload Coverage (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: |
            backend/target/site/jacoco/
            backend/coverage/
          retention-days: 7

  frontend-analysis:
    name: "🔍 Frontend Analysis"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Tests + Coverage
        run: npm run test:coverage
        # لازم سكربتك يخرج lcov إلى coverage/lcov.info

      - name: SonarCloud Scan (Frontend)
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN:  ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY_FE }}
            -Dsonar.sources=src
            -Dsonar.tests=src
            -Dsonar.test.inclusions=**/*.test.ts,**/*.test.tsx,**/*.spec.tsx
            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/build/**
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.typescript.tsconfigPath=tsconfig.json
            -Dsonar.newCode.referenceBranch=main

      - name: Upload Coverage (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage/
          retention-days: 7
