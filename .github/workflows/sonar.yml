name: SonarCloud â€” Frontend & Backend

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

permissions:
  contents: read
  checks: write

jobs:
  backend-analysis:
    name: Backend Analysis
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Build & test (produce coverage if configured)
        run: mvn -B -DskipTests=false verify

      - name: SonarCloud Scan (Backend)
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN:  ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: backend
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY_BE }}
            -Dsonar.sources=src/main/java
            -Dsonar.tests=src/test/java
            -Dsonar.java.binaries=target/classes
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
            -Dsonar.newCode.referenceBranch=main

  frontend-analysis:
    name: Frontend Analysis
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Run tests (coverage if available)
      
        run: |
          npm test -- --coverage --watchAll=false || true

      - name: SonarCloud Scan (Frontend)
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN:  ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: frontend
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY_FE }}
            -Dsonar.sources=src
            -Dsonar.tests=src
            -Dsonar.test.inclusions=**/*.test.ts,**/*.test.tsx,**/*.spec.tsx
            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/build/**
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.typescript.tsconfigPath=tsconfig.json
            -Dsonar.newCode.referenceBranch=main
